@import "./color.less";
//..多行省略
.textOverflow(@clamp: 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all;
    .judge (@clamp) when (@clamp =1) {
        white-space: nowrap;
    }
    .judge (@clamp) when (@clamp > 1) {
        display: -webkit-box;
        -webkit-line-clamp: @clamp;
        -webkit-box-orient: vertical;
    }
    .judge(@clamp);
}

.G-hide-overflow-text {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.G-hide-2rows-overflow-text {
    .textOverflow(@clamp: 2);
}

//..边框
.border(@color: @D5, @radius: 0, @direction: all) {
    position: relative;
    .judge (@direction) when (@direction ='top') {
        &::after {
            background: @color;
            content: '';
            position: absolute;
            height: 1px;
            top: 0;
            transform: scaleY(0.5);
            transform-origin: center center;
            pointer-events: none;
            left: 0;
            right: 0;
        }
    }
    .judge (@direction) when (@direction ='bottom') {
        &::after {
            background: @color;
            content: '';
            position: absolute;
            height: 1px;
            bottom: 0;
            transform: scaleY(0.5);
            transform-origin: center center;
            pointer-events: none;
            left: 0;
            right: 0;
        }
    }
    .judge (@direction) when (@direction ='left') {
        &::after {
            background: @color;
            content: '';
            position: absolute;
            width: 1px;
            left: 0;
            transform: scaleX(0.5);
            transform-origin: center center;
            pointer-events: none;
            top: 0;
            bottom: 0;
        }
    }
    .judge (@direction) when (@direction ='right') {
        &::after {
            background: @color;
            content: '';
            position: absolute;
            width: 1px;
            right: 0;
            transform: scaleX(0.5);
            transform-origin: center center;
            pointer-events: none;
            top: 0;
            bottom: 0;
        }
    }
    .judge (@direction) when (@direction ='all') {
        &::after {
            border-color: @color;
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            left: 0;
            top: 0;
            border-width: 1px;
            border-style: solid;
            transform: scale(0.5, 0.5);
            transform-origin: 0 0;
            pointer-events: none;
            box-sizing: border-box;
            border-radius: @radius;
        }
    }
    .judge(@direction);
}

.G-border-bottom {
    .border(@D5, 0, 'bottom');
}

.G-border-top {
    .border(@D5, 0, 'top');
}

.G-border-right {
    .border(@D5, 0, 'right');
}

.G-border-left {
    .border(@D5, 0, 'left');
}

.G-border {
    .border(@D5, 0, 'all');
}